/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package netbox;

import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;
import java.awt.Toolkit;
import java.io.*;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.SwingWorker;
import sun.security.krb5.internal.rcache.AuthList;

/**
 *
 * @author egor
 */
public class LoginForm extends javax.swing.JPanel {
    public void removeLoginView(){
        this.setVisible(false);
        
    }
    
    

 
    
    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();

        connectButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (IPfield.getText().length() == 0 || passwordField.getPassword().length == 0) {
                    statusLabel.setText("Please enter IP or password");
                    return;
                }
                String params[] = IPfield.getText().split("@");
                if (params.length != 2){
                    statusLabel.setText("Incorect IP");
                    return;
                }
                String username = params[0];
                String IP = params[1];
                IP = IP.replace(" ", "");
                
               
                String password = String.copyValueOf(passwordField.getPassword());
                password = password.replace(" ", "");
                int port = 22;
  
                try {
                    JSch jsch = new JSch();
                    statusLabel.setText("Connecting...");
                    Session session = jsch.getSession(username, IP, port);
              
                    session.setPassword(password);
                    session.setConfig("StrictHostKeyChecking", "no");
                    statusLabel.setText("Establishing connection");
                    session.connect();
                    statusLabel.setText("Connection established");
                    removeLoginView();
                    new MainForm(session).setVisible(true);
                } catch (Exception e1) {
                   statusLabel.setText("Connection error:" + e1.getMessage());
                   e1.printStackTrace();
                }
               
            }
          
        });
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        IPfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        connectButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter server username@IP:");

        IPfield.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        IPfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IPfield.setText("localhost@ip");
        IPfield.setMinimumSize(new java.awt.Dimension(30, 25));
        IPfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPfieldActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter server password:");

        passwordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordField.setText("jPasswordField1");
        passwordField.setMinimumSize(new java.awt.Dimension(30, 25));

        connectButton.setText("Connect");

        statusLabel.setText("Ready to connect");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IPfield, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectButton))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IPfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectButton)
                .addGap(34, 34, 34)
                .addComponent(statusLabel))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void IPfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPfieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IPfield;
    private javax.swing.JButton connectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
